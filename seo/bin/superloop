#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $DIR/utils

#command for plate solving, auto-offset script?
AUFFSET="python $DIR/auffset.py"

if [ $# -lt 6 ]; then
	echo "This routine takes a sequence of images."
    echo "Usage: superloop <number of image sets> <exposure time (seconds)> <binning, e.g., 2> <ra (HH:MM:SS)> <dec (DD:MM:SS)> <filter names(s), separated by spaces>"
    exit 1
fi

#input params
NUM_IMAGE_SETS=$1
shift
EXPOSURE_SEC=$1
shift
BINNING=$1
shift
#FILTER=$4
RA=$1
shift
DEC=$1
shift

#build filter array
FILTERS=( "$@" )

COUNT=0
DO_PINPOINT=1

#get the target images
alert "Taking $NUM_IMAGE_SETS image set(s) (bin=$BINNING, time=$EXPOSURE_SEC)..."

checkCCDTemp
checkSlit
checkAlt
checkClouds

#pfilter $FILTER
#tx point ra=$RA dec=$DEC
pinpoint $RA $DEC
tx track on

for (( k=1; k<=$NUM_IMAGE_SETS; k++ ))
do
  #report position
  tx where
  #get scope info
  tx taux
  #get image for each specified filter
  for filter in "${FILTERS[@]}"; do
    pfilter $filter
    getImage $EXPOSURE_SEC $BINNING "" `date -u +"%Y%m%d.%H%M%S%3N"`.`printf "%03d" $COUNT`.$filter.fits 
  done  
  if [ $SUCCESS -eq 1 ]
  then
	COUNT=$((COUNT+1))
  fi
  checkCCDTemp
  checkSlit
  checkAlt
  checkClouds
  #ensure tracking is on
  if [ $DO_PINPOINT -eq 1 ]
  then
	  $AUFFSET $RA $DEC
	  if [ $? -eq 1 ]
	  then
		alert "Error. Pinpoint command failed. Using mechanical tracking only."
		DO_PINPOINT=0
	  fi
  else
	  debug "Pinpoint command failed. Using mechanical tracking only."  
  fi
  #ensure dome is centered on telescope pointing location
  tx dome center > /dev/null
  tx track on > /dev/null
done

alert "Image sequence complete. Obtained $COUNT image set(s)."

